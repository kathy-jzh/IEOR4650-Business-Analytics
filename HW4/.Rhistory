wss=rep(1,50)
for (i in 1:length(wss)) wss[i]<-kmeans(clgdata,centers=i,nstart=10)$tot.withinss
for (i in 1:length(wss)+1) wss[i]<-kmeans(clgdata,centers=i,nstart=10)$tot.withinss
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~.-INSTNM, data=clgdata)
summary(linReg)
# 2(b)
wss=rep(1,50)
for (i in 1:length(wss)+1) wss[i]<-kmeans(clgdata,centers=i,nstart=10)$tot.withinss
plot(1:length(50),wss,type="b",xlab="K",ylab= "WSS")
head(clgdata)
clgdata=data.frame(clgdata_0[,-1],row.names=clgdata_0[,1])
clgdata=data.frame(clgdata[,-1],row.names=clgdata[,1])
clgdata=data.frame(clgdata[,-1])
clgdata
head(clgdata)
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
clgdata=data.frame(clgdata[,-1])
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~., data=clgdata)
summary(linReg)
# 2(b)
wss=rep(1,50)
for (i in 1:length(wss)+1) wss[i]<-kmeans(clgdata,centers=i,nstart=10)$tot.withinss
plot(1:length(50),wss,type="b",xlab="K",ylab= "WSS")
km.fit2=kmeans(clgdata, centers=4,nstart=20)
plot(clgdata,col=km.fit2$cluster)
km.fit2=kmeans(clgdata, centers=4,nstart=20)
plot(clgdata,col=km.fit2$cluster)
for (i in 1:length(wss)+1) wss[i]<-kmeans(clgdata,centers=i,nstart=20)$tot.withinss
for (i in 1:length(wss)+1) wss[i]<-kmeans(clgdata,centers=i,nstart=30)$tot.withinss
plot(1:length(50),wss,type="b",xlab="K",ylab= "WSS")
for (i in 1:length(wss)) wss[i]<-kmeans(clgdata,centers=i,nstart=30)$tot.withinss
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~.-INSTNM, data=clgdata)
summary(linReg)
# 1(d)
female = healthdata[healthdata$female==1,]
# 2(b)
clgdata_scale = scale(clgdata)
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]<-kmeans(clgdata_scale,centers=i,nstart=10)$tot.withinss
plot(1:length(50),wss,type="b",xlab="K",ylab= "WSS")
clgdata_scale = scale(clgdata[-1,])
clgdata_scale = scale(clgdata[-1])
head(clgdata)
head(clgdata_scale)
for (i in 1:length(wss)) wss[i]<-kmeans(clgdata_scale,centers=i,nstart=10)$tot.withinss
kmeans(clgdata_scale,centers=1,nstart=10)$tot.withinss
kmeans(clgdata_scale,centers=10,nstart=10)$tot.withinss
kmeans(clgdata_scale,centers=50,nstart=10)$tot.withinss
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]=kmeans(clgdata_scale,centers=i,nstart=10)$tot.withinss
plot(1:length(50),wss,type="b",xlab="K",ylab= "WSS")
plot(1:length(50),wss,type="b",xlab="K",ylab= "WSS")
plot(1:length(50)+1,wss,type="b",xlab="K",ylab= "WSS")
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
setwd("/Users/kathy/Desktop/Columbia University/2019Spring/Business Analytics/HW4")
# Prob1 *****************************************************************************
healthdata = read.csv("Tahoe_Healthcare_Data.csv")
healthdata$female = as.factor(healthdata$female)
healthdata$flu_season = as.factor(healthdata$flu_season)
healthdata$ed_admit = as.factor(healthdata$ed_admit)
healthdata$readmit30 = as.factor(healthdata$readmit30)
attach(healthdata)
library(tree)
library(ISLR)
#  1(a)
tree_health_data = tree(readmit30~.-readmit30, healthdata)
summary(tree_health_data)
plot(tree_health_data)
text(tree_health_data,pretty=0)
tree_health_data
#  1(b)
set.seed(3)
cv.health = cv.tree(tree_health_data, FUN=prune.tree, method="deviance", K=10)
names(cv.health)
cv.health
# 1(c)
healthdata$caretrack = 1
healthdata[comorbidity.score<68.5 & severity.score<31.5,]$caretrack = 0
as.double(sum(healthdata$caretrack==1) / nrow(healthdata))
# 1(d)
female = healthdata[healthdata$female==1,]
male = healthdata[healthdata$female==0,]
female_care = healthdata[healthdata$female==1 & healthdata$caretrack==1,]
male_care = healthdata[healthdata$female==0 & healthdata$caretrack==1,]
care = healthdata[healthdata$caretrack==1,]
# unawareness
nrow(female_care)/nrow(female) - nrow(care)/nrow(healthdata)
# Accuracy Parity
nrow(female_care)/nrow(female) - nrow(male_care)/nrow(male)
# Prob2 *****************************************************************************
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~.-INSTNM, data=clgdata)
summary(linReg)
# 2(b)
clgdata_scale = scale(clgdata[-1])
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]=kmeans(clgdata_scale,centers=i,nstart=10)$tot.withinss
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
par(mfrow=c(1ï¼Œ1))
par(mfrow=c(1,1))
setwd("/Users/kathy/Desktop/Columbia University/2019Spring/Business Analytics/HW4")
# Prob1 *****************************************************************************
healthdata = read.csv("Tahoe_Healthcare_Data.csv")
healthdata$female = as.factor(healthdata$female)
healthdata$flu_season = as.factor(healthdata$flu_season)
healthdata$ed_admit = as.factor(healthdata$ed_admit)
healthdata$readmit30 = as.factor(healthdata$readmit30)
attach(healthdata)
library(tree)
library(ISLR)
#  1(a)
tree_health_data = tree(readmit30~.-readmit30, healthdata)
summary(tree_health_data)
plot(tree_health_data)
text(tree_health_data,pretty=0)
tree_health_data
#  1(b)
set.seed(3)
cv.health = cv.tree(tree_health_data, FUN=prune.tree, method="deviance", K=10)
names(cv.health)
cv.health
# 1(c)
healthdata$caretrack = 1
healthdata[comorbidity.score<68.5 & severity.score<31.5,]$caretrack = 0
as.double(sum(healthdata$caretrack==1) / nrow(healthdata))
# 1(d)
female = healthdata[healthdata$female==1,]
male = healthdata[healthdata$female==0,]
female_care = healthdata[healthdata$female==1 & healthdata$caretrack==1,]
male_care = healthdata[healthdata$female==0 & healthdata$caretrack==1,]
care = healthdata[healthdata$caretrack==1,]
# unawareness
nrow(female_care)/nrow(female) - nrow(care)/nrow(healthdata)
# Accuracy Parity
nrow(female_care)/nrow(female) - nrow(male_care)/nrow(male)
# Prob2 *****************************************************************************
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~.-INSTNM, data=clgdata)
summary(linReg)
# 2(b)
clgdata_scale = scale(clgdata[-1])
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]=kmeans(clgdata_scale,centers=i,nstart=10)$tot.withinss
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
which.min(wss)
clgdata_scale[-1] = sclae(clgdata[-1])
clgdata_scale[-1] = scale(clgdata[-1])
data.frame(clgdata$INSTNM + scale(clgdata[-1]))
data.frame(clgdata$INSTNM,scale(clgdata[-1]))
clgdata_scale = data.frame(clgdata$INSTNM,scale(clgdata[-1]))
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]=kmeans(clgdata_scale[-1],centers=i,nstart=10)$tot.withinss
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
which.min(wss)
sort(clgdata_scale)
sort(clgdata_scale)
sort(clgdata_scale$clgdata.INSTNM)
head(clgdata)
head(clgdata_scale)
sort(clgdata_scale$clgdata.INSTNM)
clg_100 = sort(clgdata_scale)[:100]
clg_100 = sort(clgdata_scale)[:100,]
clg_100 = sort(clgdata_scale)[1:100,]
clg_100 = sort(clgdata_scale)
clg_100 = sort(clgdata_scale$clgdata.INSTNM)[1:100,]
sort(clgdata_scale$clgdata.INSTNM)
sort(clgdata_scale$clgdata.INSTNM)[:100]
sort(clgdata_scale$clgdata.INSTNM)[:100,]
sort(clgdata_scale$clgdata.INSTNM)[1:100,]
sort(clgdata_scale$clgdata.INSTNM)[100,]
data.frame(sort(clgdata_scale$clgdata.INSTNM))[100,]
data.frame(sort(clgdata_scale$clgdata.INSTNM))[1:100,]
clg_100 = data.frame(sort(clgdata_scale$clgdata.INSTNM))[1:100,]
nrow(clg_100)
clg_100
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
clg_100
head(clg_100)
help(hclust)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
plot(hc.average,main="Hierachical Clustering")
plot(clg_100,col=cutree(hc.average,4))
plot(hc.average,main="Hierachical Clustering")
plot(clg_100,col=cutree(hc.average,4))
plot(clg_100,col=cutree(hc.average,4))
plot(hc.average)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
clusters = cutree(hc.complete,4)
clusters = cutree(hc.average,4)
clusters
plot(clg_100,col=clusters+1,pch=10,lwd=3)
plot(clg_100,col=clusters+1)
plot(clg_100,col=clusters+1)
# 2(c)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
plot(clg_100,col=cutree(hc.average,4))
true.clusters #true clusters
clust.centroid = function(i, dat, clusters) {
ind = (clusters == i)
colMeans(clg_100[ind,])
}
sapply(unique(clusters), clust.centroid, USArrests, clusters)
sapply(unique(clusters), clust.centroid, clusters)
sapply(unique(clusters), clust.centroid, clg_100, clusters)
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
head(clg_100[-1])
clusters
unique(clusters)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
clusters = cutree(hc.average, k=4)
plot(clg_100,col=clusters)
clust.centroid = function(i, dat, clusters) {
ind = (clusters == i)
colMeans(clg_100[ind,])
}
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
clusters = cutree(hc.average, k=4)
plot(clg_100,col=clusters)
clust.centroid = function(i, dat, clusters) {
ind = (clusters == i)
colMeans(clg_100[ind,])
}
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
is.data.frame(clg_100[-1,])
sapply(unique(clusters), clust.centroid, clg_100[-1,], clusters)
head(clg_100[-1,])
head(clg_100[-1\])
head(clg_100[-1])
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
is.data.frame(clg_100[-1])
View(hclust@centroids)
View(hc.average@centroids)
colMeans(clg_100$SAT_AVG)
colMeans(clg_100[-1])
length(clusters)
length(clg_100)
nrow(clg_100)
colMeans(clusters==1)
colMeans(clusters)
colMeans(clg_100[clusters==1,])
clg_100[clusters==1,]
colMeans(clg_100[clusters==1,][-1])
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
clusters = cutree(hc.average, k=4)
plot(clg_100,col=clusters)
clust.centroid = function(i, dat, clusters) {
ind = (clusters == i)
colMeans(clg_100[ind,][-1])
}
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
pr.out=prcomp(clgdata[-1],scale=T)
names(pr.out)
summary(pr.out)
pr.out=prcomp(clgdata[-1],scale=T)
summary(pr.out)
pr.var=pr.out$sdev^2
pve=pr.var/sum(pr.var)
pve
pr.out=prcomp(clgdata[-1],scale=T)
summary(pr.out)
pr.var=pr.out$sdev^2
pve=pr.var/sum(pr.var)
pve
plot(pve)
pr.out=prcomp(clgdata_scale[-1],scale=T)
summary(pr.out)
pr.var=pr.out$sdev^2
pve=pr.var/sum(pr.var)
pve
plot(summary(pr.out)$importance[2,])
plot(summary(pr.out)$importance[3,])
dim(pr.out$x)
biplot(pr.out, scale=0)
help(biplot)
pve
plot(cumsum (pve), xlab=" Principal Component ", ylab ="Cumulative Proportion of Variance Explained ",
ylim=c(0,1), type="b")
clg_100.columns()
columns(clg_100)
clg_100.columns
colnames(clg_100)
installs.package9'pls'
installs.package('pls')
install.packages(('pls'))
install.packages('ISLR')
install.packages("ISLR")
library(pls)
library(ISLR)
# Prob2 *****************************************************************************
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
library(pls)
library(ISLR)
pcr.fit=pcr(SAT_AVG~.,data=clgdata_scale[-1],scale=T,validation="CV")
summary(pcr.fit)
validationplot(pcr.fit,val.type="MSEP")
library(pls)
library(ISLR)
pcr.fit=pcr(SAT_AVG~.,data=clgdata_scale[-1],scale=T,validation="CV",ncomp=5)
summary(pcr.fit)
validationplot(pcr.fit,val.type="MSEP")
pls.fit = plsr(SAT_AVG~.,data=clgdata_scale[-1], scale=T, validation ="CV", segments=5)
summary(pls.fit)
validationplot(pls.fit,val.type="MSEP")
# 2(f)
# PCR
library(pls)
library(ISLR)
pcr.fit=pcr(SAT_AVG~.,data=clgdata_scale[-1],scale=T,validation="CV",segments=5)
summary(pcr.fit)
validationplot(pcr.fit,val.type="MSEP")
# PLS
pls.fit = plsr(SAT_AVG~.,data=clgdata_scale[-1], scale=T, validation ="CV", segments=5)
summary(pls.fit)
validationplot(pls.fit,val.type="MSEP")
validationplot(pcr.fit,val.type="MSEP")
validationplot(pls.fit,val.type="MSEP")
pls2.fit = plsr(SAT_AVG~.,data=clgdata_scale[-1], scale=TRUE, ncomp=2, validation ="CV", segments=5)
summary(pls2.fit)
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
wss
set.seed(3)
cv.health = cv.tree(tree_health_data, FUN=prune.tree, method="deviance", K=10)
names(cv.health)
cv.health
setwd("/Users/kathy/Desktop/Columbia University/2019Spring/Business Analytics/HW4")
# Prob1 *****************************************************************************
healthdata = read.csv("Tahoe_Healthcare_Data.csv")
healthdata$female = as.factor(healthdata$female)
healthdata$flu_season = as.factor(healthdata$flu_season)
healthdata$ed_admit = as.factor(healthdata$ed_admit)
healthdata$readmit30 = as.factor(healthdata$readmit30)
attach(healthdata)
library(tree)
library(ISLR)
#  1(a)
tree_health_data = tree(readmit30~.-readmit30, healthdata)
summary(tree_health_data)
plot(tree_health_data)
text(tree_health_data,pretty=0)
tree_health_data
#  1(b)
set.seed(3)
cv.health = cv.tree(tree_health_data, FUN=prune.tree, method="deviance", K=10)
names(cv.health)
cv.health
# 1(c)
healthdata$caretrack = 1
healthdata[comorbidity.score<68.5 & severity.score<31.5,]$caretrack = 0
as.double(sum(healthdata$caretrack==1) / nrow(healthdata))
# 1(d)
female = healthdata[healthdata$female==1,]
male = healthdata[healthdata$female==0,]
female_care = healthdata[healthdata$female==1 & healthdata$caretrack==1,]
male_care = healthdata[healthdata$female==0 & healthdata$caretrack==1,]
care = healthdata[healthdata$caretrack==1,]
# unawareness
nrow(female_care)/nrow(female) - nrow(care)/nrow(healthdata)
# Accuracy Parity
nrow(female_care)/nrow(female) - nrow(male_care)/nrow(male)
# Prob2 *****************************************************************************
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~.-INSTNM, data=clgdata)
summary(linReg)
# 2(b)
clgdata_scale = data.frame(clgdata$INSTNM,scale(clgdata[-1]))
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]=kmeans(clgdata_scale[-1],centers=i,nstart=10)$tot.withinss
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
wss
which.min(wss)
# 2(c)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
clusters = cutree(hc.average, k=4)
plot(clg_100,col=clusters)
clust.centroid = function(i, dat, clusters) {
ind = (clusters == i)
colMeans(clg_100[ind,][-1])
}
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
# 2(d)
pr.out=prcomp(clgdata_scale[-1],scale=T)
summary(pr.out)
pr.var=pr.out$sdev^2
pve=pr.var/sum(pr.var)
pve
plot(cumsum (pve), xlab=" Principal Component ", ylab ="Cumulative Proportion of Variance Explained ",
ylim=c(0,1), type="b")
# 2(e)
biplot(pr.out, scale=0)
# 2(f)
# PCR
library(pls)
library(ISLR)
pcr.fit=pcr(SAT_AVG~.,data=clgdata_scale[-1],scale=T,validation="CV",segments=5)
summary(pcr.fit)
validationplot(pcr.fit,val.type="MSEP")
# PLS
pls.fit = plsr(SAT_AVG~.,data=clgdata_scale[-1], scale=T, validation ="CV", segments=5)
summary(pls.fit)
validationplot(pls.fit,val.type="MSEP")
pls2.fit = plsr(SAT_AVG~.,data=clgdata_scale[-1], scale=TRUE, ncomp=2, validation ="CV", segments=5)
summary(pls2.fit)
setwd("/Users/kathy/Desktop/Columbia University/2019Spring/Business Analytics/HW4")
# Prob1 *****************************************************************************
healthdata = read.csv("Tahoe_Healthcare_Data.csv")
healthdata$female = as.factor(healthdata$female)
healthdata$flu_season = as.factor(healthdata$flu_season)
healthdata$ed_admit = as.factor(healthdata$ed_admit)
healthdata$readmit30 = as.factor(healthdata$readmit30)
attach(healthdata)
library(tree)
library(ISLR)
#  1(a)
tree_health_data = tree(readmit30~.-readmit30, healthdata)
summary(tree_health_data)
plot(tree_health_data)
text(tree_health_data,pretty=0)
tree_health_data
#  1(b)
set.seed(3)
cv.health = cv.tree(tree_health_data, FUN=prune.tree, method="deviance", K=10)
names(cv.health)
cv.health
# 1(c)
healthdata$caretrack = 1
healthdata[comorbidity.score<68.5 & severity.score<31.5,]$caretrack = 0
as.double(sum(healthdata$caretrack==1) / nrow(healthdata))
# 1(d)
female = healthdata[healthdata$female==1,]
male = healthdata[healthdata$female==0,]
female_care = healthdata[healthdata$female==1 & healthdata$caretrack==1,]
male_care = healthdata[healthdata$female==0 & healthdata$caretrack==1,]
care = healthdata[healthdata$caretrack==1,]
# unawareness
nrow(female_care)/nrow(female) - nrow(care)/nrow(healthdata)
# Accuracy Parity
nrow(female_care)/nrow(female) - nrow(male_care)/nrow(male)
# Prob2 *****************************************************************************
clgdata = read.csv("CollegeData.csv")
clgdata = na.omit(clgdata)
attach(clgdata)
# 2(a)
linReg = lm(SAT_AVG~.-INSTNM, data=clgdata)
summary(linReg)
# 2(b)
clgdata_scale = data.frame(clgdata$INSTNM,scale(clgdata[-1]))
wss=rep(1,50)
for (i in 1:length(wss)) wss[i]=kmeans(clgdata_scale[-1],centers=i,nstart=10)$tot.withinss
plot(1:length(wss),wss,type="b",xlab="K",ylab= "WSS")
wss
which.min(wss)
# 2(c)
clg_100 =  clgdata_scale[order(clgdata_scale$clgdata.INSTNM),]
hc.average=hclust(dist(clg_100),method="average")
clusters = cutree(hc.average, k=4)
plot(clg_100,col=clusters)
clust.centroid = function(i, dat, clusters) {
ind = (clusters == i)
colMeans(clg_100[ind,][-1])
}
sapply(unique(clusters), clust.centroid, clg_100[-1], clusters)
# 2(d)
pr.out=prcomp(clgdata_scale[-1],scale=T)
summary(pr.out)
pr.var=pr.out$sdev^2
pve=pr.var/sum(pr.var)
pve
plot(cumsum (pve), xlab=" Principal Component ", ylab ="Cumulative Proportion of Variance Explained ",
ylim=c(0,1), type="b")
# 2(e)
biplot(pr.out, scale=0)
# 2(f)
# PCR
library(pls)
library(ISLR)
pcr.fit=pcr(SAT_AVG~.,data=clgdata_scale[-1],scale=T,validation="CV",segments=5)
summary(pcr.fit)
validationplot(pcr.fit,val.type="MSEP")
# PLS
pls.fit = plsr(SAT_AVG~.,data=clgdata_scale[-1], scale=T, validation ="CV", segments=5)
summary(pls.fit)
validationplot(pls.fit,val.type="MSEP")
